@model MichellesWebsite.Models.Address

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Address</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            @Html.LabelFor(model => model.firstLine, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.firstLine, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.firstLine, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.secondLine, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.secondLine, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.secondLine, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.postcode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.postcode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.postcode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.city, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.city, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
        @Html.LabelFor(model => model.country, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.country, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.country, "", new { @class = "text-danger" })
        </div>
    </div>
        <div class="form-group" id="stateForm">
            @Html.LabelFor(model => model.stateId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.stateId, new SelectList(Enumerable.Empty<SelectListItem>()), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.stateId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<style>
    #stateForm {
        display: none;
    }
</style>

<script type="text/javascript">
    $(document).ready(function () {

        $("#country").change(function () {
            var e = document.getElementById("country").value;
            if(e != "0")
            {
                $("#stateForm").show("fast");
                var url = '@Url.Action("GetStates", "States", null)'
                $.ajax({
                    url: url,
                    method: "POST", // post is safer, but could also be GET
                    data: {
                        country: $("#country").val(),
                    }, // any data (as a JSON object) you want to pass to the method
                    success: function (data) {
                        var items = '<option>Select a State</option>';
                        $.each(data, function (i, state) {
                            items += "<option value='" + state.id + "'>" + state.name + "</option>";
                            // state.Value cannot contain ' character. We are OK because state.Value = cnt++;
                        });
                        $('#stateId').html(items);
                    }

        });
            }
            else
            {
                $("#stateForm").hide("fast");
            }
        });
    });
</script>